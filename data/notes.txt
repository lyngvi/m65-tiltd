Tilt controls 2:

Most notes from m65-tilt-controls-2.pcapng

#define KEY_MEDIA_PREVIOUSSONG 0xea
#define KEY_MEDIA_NEXTSONG 0xeb

1.2.2 appears to be standard mouse controls

Start up wireshark
Idle for 10s, messing around moving mouse around
T=~12        ICUE startup (should be device 1.1.1 noise). There's a lot of noise on 1.2.4 that appears to disappear after idle. There might be some configuration in there that needs duplication.
T=~ 14.7 (#1763) - first command from iCue to device on interface 1.2.4
	HID DATA: 08021100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
There's a lot of back and forth in 1.2.4 through T=~20
T=~ 42.2 Left, right, forward, back, tilt practice. Forward and back are not bound to any controls and don't appear to create URBs. Hints that the mouse might be told to wake at some point and issue a command. Really need to decode those HID commands.
	HID DATA:                 01090001030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
	another:                  01090001020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
	                                 ^--- this is probably the byte indicating tilt axis - perhaps forward and back are 0, 1 or 5, 6.
T=~ 118 Start up the tilt monitor later in the game. 

actual tilt controls:
	HID DATA:                 010900010300000000000000000000 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
                             | |   | |                   ^------ last meaningful byte           
                             | |   | ^------ keyboard: u + keyboard: v
                             | |   ^----- keyboard: m
                             | ^--------- lctrl + lgui(windows key)
                             ^------ report id 1
	another:                  01090001020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
######## from m65-1.1-change-tils-angles.txt
See control packets on 1.1.4 around 27233 - adjusted left tilt 20, 30, 40, 20; adjusted right tilt 20, 30, 40, 20
23233 1b00a0f9f6d7849dffff00000000  09000001000100040140000000 09120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
25157 1b00a049bbd7849dffff00000000  09000001000100040140000000 09120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      1b00a0f9f6d7849dffff00000000  09000001000100040140000000 0901ba00140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

  245 1b00a0f9f6d7849dffff00000000  0900000100010004014000000008120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  547 1b00a0f9f6d7849dffff00000000  0900000100010004014000000009120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

Attempt to do it with send_raw (failure 1):
40a5842e128effff5301040201002d004c805e6300000000f47b0d008dffffff4000000040000000000000000000000001000000000000000000000000000000
                                                               0901ba00140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

                                    There's no report descriptor for this. Interrupt out.
25885 1b00a049bbd7849dffff00000000  090000010001000401400000000901b9001e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
26525 1b00a0f9f6d7849dffff00000000  090000010001000401400000000901b900140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000		
26465 1b00a0f9f6d7849dffff00000000  090000010001000401400000000901b900280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
27231 1b00a0f9f6d7849dffff00000000  090000010001000401400000000901ba001e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
27335 1b00a0f9f6d7849dffff00000000  090000010001000401400000000901ba00280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
27385 1b00a0f9f6d7849dffff00000000  090000010001000401400000000901ba00140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  
                                                                     ^-- These look like the 20, 30, 40 numbers that iCue enforces. Could we be so lucky as to just pass them through?    
                                                                   ^-- I know I messed with both left and right, and these map to 3 and 2 in the commands above. 

11001
11010


[15:56:21] greg@midgaarde:~/workspace/m65pro-reverse-engineer/data$ ls -l /dev/input/by-id/
total 0
lrwxrwxrwx 1 root root 10 Oct 29 11:50 usb-045e_Controller_1187A89-event-joystick -> ../event22
lrwxrwxrwx 1 root root  6 Oct 29 11:50 usb-045e_Controller_1187A89-joystick -> ../js1
lrwxrwxrwx 1 root root 10 Oct 29 11:50 usb-046d_HD_Pro_Webcam_C920_B08FBCDF-event-if00 -> ../event23
lrwxrwxrwx 1 root root 10 Oct 29 11:50 usb-Corsair_CORSAIR_SLIPSTREAM_WIRELESS_USB_Receiver_DA82967DC7425BF4-event-if04 -> ../event20     
lrwxrwxrwx 1 root root 10 Oct 29 11:50 usb-Corsair_CORSAIR_SLIPSTREAM_WIRELESS_USB_Receiver_DA82967DC7425BF4-event-mouse -> ../event18    
lrwxrwxrwx 1 root root 10 Oct 29 11:50 usb-Corsair_CORSAIR_SLIPSTREAM_WIRELESS_USB_Receiver_DA82967DC7425BF4-if03-event-kbd -> ../event21
lrwxrwxrwx 1 root root 10 Oct 29 11:50 usb-Corsair_CORSAIR_SLIPSTREAM_WIRELESS_USB_Receiver_DA82967DC7425BF4-if05-event-kbd -> ../event19
lrwxrwxrwx 1 root root  6 Oct 29 11:50 usb-Corsair_CORSAIR_SLIPSTREAM_WIRELESS_USB_Receiver_DA82967DC7425BF4-mouse -> ../js0
lrwxrwxrwx 1 root root  9 Oct 29 11:50 usb-Corsair_Corsair_VOID_PRO_Wireless_Gaming_Headset-event-if03 -> ../event4

Mouse endpoint-interface mapping
| Interface | Endpoint
| --------  | --------
| 0         | 82
| 1         |  4, 84
| 2         | 83
| 3         | 81
| 4         | 85
| 5         | 86

/:  Bus 01.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/14p, 480M
    |__ Port 7: Dev 2, If 0, Class=Human Interface Device, Driver=usbhid, 12M
    |__ Port 7: Dev 2, If 1, Class=Human Interface Device, Driver=usbhid, 12M  # Not sure what this is
    |__ Port 7: Dev 2, If 2, Class=Human Interface Device, Driver=usbhid, 12M  # This is the main mouse interface (packet capture)
    |__ Port 7: Dev 2, If 3, Class=Human Interface Device, Driver=usbhid, 12M  # Interface exposing tilt events (based on packet capture), keyboard (based on dev input)
    |__ Port 7: Dev 2, If 4, Class=Human Interface Device, Driver=usbhid, 12M  # Control interface, possibly configuring tilt handling (based on packet capture)
    |__ Port 7: Dev 2, If 5, Class=Human Interface Device, Driver=usbhid, 12M  # Unknown. Appears to show up as a keyboard interface somehow.
    |__ Port 11: Dev 4, If 0, Class=Wireless, Driver=btusb, 12M
    |__ Port 11: Dev 4, If 1, Class=Wireless, Driver=btusb, 12M

https://unix.stackexchange.com/questions/656351/filter-mouse-events



received: : 01 09 00 01     # Forward
received: : 01 09 00 01 01  # Back
received: : 01 09 00 01 02  # Left
received: : 01 09 00 01 03  # Right


Additional notes from m65-icue-running-mouse-idle.pcapng:

Every ~24s or so, host => 1.1.4 of
  1075: \x08\x12; response: 1077: 00 12 00 04
  1076: \x09\x12; response: 1079: 01 12
  The host appears to maintain one outstanding interrupt receive urb on endpoint 4; however, as far as the mouse is concerned, these appear to be the same kind of cmd-response transfers